basePath: /
consumes:
- application/json
definitions:
  ErrGenericError:
    description: ErrGenericError is a generic error message returned by a server
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/flagsibh/mservices/product-api/data
  ErrGenericErrors:
    properties:
      messages:
        items:
          type: string
        type: array
        x-go-name: Messages
    title: ErrGenericErrors is a collection of generic or validation errors.
    type: object
    x-go-package: github.com/flagsibh/mservices/product-api/data
  Product:
    description: Product is the main data unit
    properties:
      description:
        description: the description of the product
        maxLength: 10000
        type: string
        x-go-name: Description
      id:
        description: the id of the product.
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      name:
        description: the name of the product
        maxLength: 255
        type: string
        x-go-name: Name
      price:
        description: the price of the product
        format: float
        minimum: 0.01
        type: number
        x-go-name: Price
      sku:
        description: the unique product identification
        pattern: '[a-z]+-[a-z]+-[a-z]+'
        type: string
        x-go-name: SKU
    required:
    - id
    - name
    - price
    - sku
    type: object
    x-go-package: github.com/flagsibh/mservices/product-api/data
host: some-url.com
info:
  description: Documentation of Products API.
  title: Products API.
  version: 1.0.0
paths:
  /:
    get:
      operationId: listProducts
      responses:
        "200":
          $ref: '#/responses/productsResponse'
      summary: Returns a list of products.
      tags:
      - products
    post:
      operationId: createProduct
      responses:
        "201":
          $ref: '#/responses/productResponse'
        "422":
          $ref: '#/responses/errorValidationResponse'
        "501":
          $ref: '#/responses/errorResponse'
      summary: Creates a new product.
      tags:
      - products
    put:
      operationId: updateProduct
      responses:
        "200":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorValidationResponse'
      summary: Updates an existing product.
      tags:
      - products
  /{id}:
    delete:
      operationId: deleteProduct
      parameters:
      - description: The id of the product to delete
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "501":
          $ref: '#/responses/errorResponse'
      summary: Deletes a product.
      tags:
      - products
    get:
      operationId: findProduct
      parameters:
      - description: The id of the product to retrieve
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          $ref: '#/responses/productResponse'
        "404":
          $ref: '#/responses/errorResponse'
      summary: Retuns a single product from the list.
      tags:
      - products
produces:
- application/json
responses:
  errorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/ErrGenericError'
  errorValidationResponse:
    description: Validation errors defined as an array of strings
    schema:
      $ref: '#/definitions/ErrGenericErrors'
  noContentResponse: {}
  productResponse:
    description: Data structure representing a single product
    schema:
      $ref: '#/definitions/Product'
  productsResponse:
    description: Response containing an array of products.
    schema:
      items:
        $ref: '#/definitions/Product'
      type: array
schemes:
- http
swagger: "2.0"
